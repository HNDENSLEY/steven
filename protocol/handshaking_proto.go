// Generated by protocol_builder
// Do not edit

package protocol

import (
	"bytes"
)

func (h *Handshake) id() int { return 0 }
func (h *Handshake) write(ww *bytes.Buffer) (err error) {
	var tmp [2]byte
	if err = writeVarInt(ww, h.ProtocolVersion); err != nil {
		return err
	}
	if err = writeString(ww, h.Host); err != nil {
		return err
	}
	tmp[0] = byte(h.Port >> 8)
	tmp[1] = byte(h.Port >> 0)
	if _, err = ww.Write(tmp[:2]); err != nil {
		return
	}
	if err = writeVarInt(ww, h.Next); err != nil {
		return err
	}
	return
}
func (h *Handshake) read(rr *bytes.Reader) (err error) {
	var tmp [2]byte
	if h.ProtocolVersion, err = readVarInt(rr); err != nil {
		return err
	}
	if h.Host, err = readString(rr); err != nil {
		return err
	}
	if _, err = rr.Read(tmp[:2]); err != nil {
		return err
	}
	h.Port = (uint16(tmp[1]) << 0) | (uint16(tmp[0]) << 8)
	if h.Next, err = readVarInt(rr); err != nil {
		return err
	}
	return
}

func init() {
	packetCreator[Handshaking][serverbound][0] = func() Packet { return &Handshake{} }
}
